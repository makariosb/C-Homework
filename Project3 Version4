#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#define PRINT 0
#define SAVE 1
#define MAXWORDS 100
#define MAXCHARS 50
int makeselection(void);
void getinputtext(char wordlist[MAXWORDS][MAXCHARS]);
void countwordschars(char wordlist[MAXWORDS][MAXCHARS]);
void countuniquewords(char wordlist[MAXWORDS][MAXCHARS]);
void makehistogram(char wordlist[MAXWORDS][MAXCHARS],int MODE);
void spellcheck(char wordlist[MAXWORDS][MAXCHARS]);
void fixsyntax(char *word);
void fixgrammar(char *word);


int main(void) {
	char selection;
	char wordlist[MAXWORDS][MAXCHARS]={' '};
	while ((selection=makeselection())!='s'){
		switch(selection){
			case 'a':
				getinputtext(wordlist);
				countwordschars(wordlist);
				break;
			case 'b':
				getinputtext(wordlist);
				countuniquewords(wordlist);
				break;
			case 'c':
				getinputtext(wordlist);
				makehistogram(wordlist,PRINT);
				break;
			case 'd':
				getinputtext(wordlist);
				makehistogram(wordlist,SAVE);
				break;
			case 'e':
				spellcheck(wordlist);
				break;
			case 's':
				break;
			case '\n':
				break;
			default:
				puts("Your selection is invalid, please type another letter: ");
				break;
		}
	}
	return 0;
}

int makeselection(void){
	int input;
	printf("\nWelcome to the poor man's Text Editor!\nPlease type a letter that corresponds to what you want to do:\na : Count characters and words\nb : Count unique words\nc : Print word length histogram\nd : Save word length histogram\ne : Spell check\nf : Formatting Check\nTo stop the program type \"s\"\n");
	input=getch();
	return input;
}

void getinputtext(char wordlist[MAXWORDS][MAXCHARS]){
	char tempword[MAXCHARS];
	char textstream[MAXCHARS];
	FILE *userfile;
	int i=0,j;
	for(j=0;j<MAXWORDS;strcpy(wordlist[j++],""));
	puts("Please enter the name of the file to be imported(with .txt in the end):");
	scanf("%s",textstream);
	userfile=fopen(textstream,"rt");
	while (fscanf(userfile,"%s",tempword)!=EOF){
		if (tempword[strlen(tempword)-1]=='\n'){
			strcpy(tempword,strtok(tempword,"\n"));
		}
		strcpy(wordlist[i++],tempword);
	}
	/*for (j=0;j<i;j++){
		puts(wordlist[j]);
	}*/
}

void countwordschars(char wordlist[MAXWORDS][MAXCHARS]){
	int words,chars=0;
	for (words=0;strcmp(wordlist[words],"")!=0;words++){
		chars+=strlen(wordlist[words]);
	}
	printf("Number of Words: %d\n",words);
	printf("Number of Characters: %d\n",chars-1);
}

void countuniquewords(char wordlist[MAXWORDS][MAXCHARS]){
	char unique[MAXWORDS][MAXCHARS];
	int i=0,count=0,j,mode=1;
	while (strcmp(wordlist[i],"")!=0){
		for (j=0;strcmp(unique[j],"")!=0;j++){
			if (strcmp(wordlist[i],unique[j])==0){
				mode=0;
				break;
			}
		}
		switch(mode){
			case 1:
				strcpy(unique[count++],wordlist[i]);
				break;
			case 0:
				mode=1;
				break;
		}
		i++;
	}
	printf("Number of unique words: %d\n",count);
}

void makehistogram(char wordlist[MAXWORDS][MAXCHARS],int MODE){
	int i=0;
	char outputname[MAXCHARS];
	int lens[MAXCHARS]={0};
	FILE *histogram;
	while (strcmp(wordlist[i],"")!=0){
		lens[strlen(wordlist[i])]++;
		i++;
	}
	switch (MODE){
		case PRINT:
			printf("Word Length Histogram : \n");
			for (i=0;i<MAXCHARS;i++){
				if (lens[i]!=0){
					printf("%s%d%s%d\n","The number of words with ",i," characters is: ",lens[i]);
				}
			}
			break;
		case SAVE:
			puts("How would you like the histogram text file to be named?(no .txt in the end): ");
			scanf("%s",outputname);
			histogram=fopen(strcat(outputname,".txt"),"wt");
			fprintf(histogram,"Word Length Histogram : \n");
			for (i=0;i<MAXCHARS;i++){
				if (lens[i]!=0){
					fprintf(histogram,"%s%d%s%d\n","The number of words with ",i," characters is: ",lens[i]);
				}
			}
			fclose(histogram);
			puts("Done.");
			break;
	}
}

void spellcheck(char wordlist[MAXWORDS][MAXCHARS]){
	char tempword[MAXCHARS];
	char textstream[MAXCHARS];
	FILE *userfile;
	FILE *fixedfile;
	int i=0,j;
	puts("Please enter the name of the file to be imported(with .txt in the end):");
	scanf("%s",textstream);
	userfile=fopen(textstream,"rt");
	fixedfile=fopen(strcat(textstream,"-spellchecked.txt"),"wt");
	while (fgets(tempword,MAXCHARS,userfile)!=NULL){
		if (tempword[strlen(tempword)-1]=='\n'){
			strcpy(tempword,strtok(tempword,"\n"));
		}
		strcpy(wordlist[i++],tempword);
	}
	for (j=0;j<i;j++){
		fixsyntax(wordlist[j]);
		fixgrammar(wordlist[j]);
		fprintf(fixedfile,"%s\n",wordlist[j]);
	}
	puts("Done.");
}

void fixsyntax(char *word){
	int i,j=0;
	char newword[MAXCHARS];
	for (i=0;word[i]!='\0';i++){
		if((ispunct(word[i])) && word[i-1]==' ' && word[i+1]==' '){
			newword[i-1]=',';
			continue;
		}
		if ((ispunct(word[i])) && word[i-1]==' ' && word[i+1]=='\0'){
			newword[j-1]=word[i];
			newword[i]='\0';
			continue;
		}
		if ((ispunct(word[i])) && word[i-1]==' ' && word[i+1]!=' '){
			newword[i-1]=',';
			newword[i]=' ';
			j++;
			continue;
		}
		newword[j]=word[i];
		j++;
	}
	newword[j]='\0';
	strcpy(word,newword);
}

void fixgrammar(char *word){
	int i;
	for (i=0;word[i]!='\0';i++){
		if (((word[i]=='.') || (word[i]=='?') || (word[i]=='!')) && (islower((int) word[i+2]))){
		word[i+2]=toupper(word[i+2]);
		}
	}
}
